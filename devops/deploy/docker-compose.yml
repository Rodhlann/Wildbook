version: "3.8"

services:

  db:
    image: postgres:13.4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 60
    labels:
      - autoheal=true
    user: postgres
    volumes:
      - db-pgdata-var:/var/lib/postgresql/data
      # DB initialization scripts
      - .dockerfiles/db/initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - intranet
    ports:
      # development exposure, not exposed in production
      - 5433:5432
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      WBIA_DB_NAME: "${WBIA_DB_NAME}"
      WBIA_DB_USER: "${WBIA_DB_USER}"
      WBIA_DB_PASSWORD: "${WBIA_DB_PASSWORD}"
      WILDBOOK_DB_NAME: "${WILDBOOK_DB_NAME}"
      WILDBOOK_DB_USER: "${WILDBOOK_DB_USER}"
      WILDBOOK_DB_PASSWORD: "${WILDBOOK_DB_PASSWORD}"

  elasticsearch:
    # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    #healthcheck:
      #test: ["CMD-SHELL", "curl --silent --fail 127.0.0.1:9200/_cluster/health || exit 1"]
      #interval: 10s
      #timeout: 5s
      #retries: 60
    labels:
      - autoheal=true
    volumes:
      - es-var1:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - intranet
    ports:
      # development exposure, not exposed in production
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=elasticsearch
      - discovery.seed_hosts=elasticsearch2,elasticsearch3
      - cluster.initial_master_nodes=elasticsearch,elasticsearch2,elasticsearch3
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=${ES_THRESHOLD:-true}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    depends_on:
      - elasticsearch
    #healthcheck:
      #test: ["CMD-SHELL", "curl --silent --fail 127.0.0.1:9200/_cluster/health || exit 1"]
      #interval: 10s
      #timeout: 5s
      #retries: 60
    labels:
      - autoheal=true
    volumes:
      - es-var2:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - intranet
    environment:
      - node.name=elasticsearch2
      - discovery.seed_hosts=elasticsearch,elasticsearch3
      - cluster.initial_master_nodes=elasticsearch,elasticsearch2,elasticsearch3
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=${ES_THRESHOLD:-true}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    depends_on:
      - elasticsearch2
    #healthcheck:
      #test: ["CMD-SHELL", "curl --silent --fail 127.0.0.1:9200/_cluster/health || exit 1"]
      #interval: 10s
      #timeout: 5s
      #retries: 60
    labels:
      - autoheal=true
    volumes:
      - es-var3:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - intranet
    environment:
      - node.name=elasticsearch3
      - discovery.seed_hosts=elasticsearch,elasticsearch2
      - cluster.initial_master_nodes=elasticsearch,elasticsearch2,elasticsearch3
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=${ES_THRESHOLD:-true}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  wildbook:
    # See: https://github.com/WildMeOrg/Wildbook/tree/next-gen
    #  - git clone -b next-gen git@github.com:WildMeOrg/Wildbook.git && cd Wildbook
    # - ./scripts/build.docker.sh
    image: tomcat:9.0.85-jre8-temurin-jammy
    #image: tomcat:latest
    depends_on:
      db:
        condition: service_healthy
    labels:
      - autoheal=true
    volumes:
      - wildbook-var:/data/wildbook_data_dir
      #- .dockerfiles/db/initdb.d/:/docker-entrypoint-initdb.d/
      - /data/tomcat9/wildbook_docker_webapps/:/usr/local/tomcat/webapps/
      - /data/tomcat9/logs/:/usr/local/tomcat/logs/
      - /data/tomcat9/server.xml:/usr/local/tomcat/conf/server.xml
    networks:
      - intranet
    ports:
      # FIXME: exposed for developer verification
      - "81:8080"
    environment:
      DB_USER: "${WILDBOOK_DB_USER}"
      DB_PASSWORD: "${WILDBOOK_DB_PASSWORD}"
      DB_CONNECTION_URL: "${WILDBOOK_DB_CONNECTION_URL}"
      # Admin user created on startup,
      # https://github.com/WildMeOrg/Wildbook/commit/6d65e70e43691f1b281bb76edf151e5c7cdb7403
      ADMIN_EMAIL: "${EDM_AUTHENTICATIONS_USERNAME__DEFAULT}"
      ADMIN_PASSWORD: "${EDM_AUTHENTICATIONS_PASSWORD__DEFAULT}"
      # JAVA_OPTS from old-world wildbook, which gives us 4G heap memory
      JAVA_OPTS: "-Djava.awt.headless=true -Xms4096m -Xmx4096m"

#### wbia and nginx we current do not yet start

  wbia:
    profiles:
      - donotstart
    # https://github.com/WildMeOrg/wildbook-ia
    image: wildme/wbia:latest
    command: ["--db-uri", "${WBIA_DB_URI}"]
    depends_on:
      db:
        condition: service_healthy
    # healthcheck:  # WBIA defines it's own health check and is already labeled for autoheal
    # labels:
    #   - autoheal=true
    volumes:
      - wbia-database-var:/data/db
      - wbia-cache-var:/cache
    networks:
      - intranet
    ports:
      # FIXME: exposed for developer verification
      - "82:5000"
    environment:
      WBIA_DB_URI: "${WBIA_DB_URI}"
      HOUSTON_CLIENT_ID: "${HOUSTON_CLIENT_ID}"
      HOUSTON_CLIENT_SECRET: "${HOUSTON_CLIENT_SECRET}"

  nginx:
    profiles:
      - donotstart
    image: nginx:1.23.4
    #healthcheck:
      #test: [ "CMD", "curl", "-f", "http://localhost:84/"]
      #interval: 10s
      #timeout: 5s
      #retries: 60
    labels:
      - autoheal=true
    volumes:
      - .dockerfiles/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - intranet
    ports:
      # BBB deprecated in favor or port 80, remains for backward compat
      - "84:80"

  autoheal:
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AUTOHEAL_CONTAINER_LABEL: "autoheal"
      AUTOHEAL_INTERVAL: 15
      AUTOHEAL_START_PERIOD: 600
      AUTOHEAL_DEFAULT_STOP_TIMEOUT: 60
    restart: always

networks:
  intranet:

volumes:
  db-pgdata-var:
  es-var1:
  es-var2:
  es-var3:
  wbia-database-var:
  wbia-cache-var:
  wildbook-var:
