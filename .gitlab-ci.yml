stages:
  - setup
  - test
  - build
  - deploy

prepare:
  stage: setup
  image: maven:3.3.9-jdk-8
  tags:
    - docker
  cache:
    key: maven
    paths:
      - ./m2Repository
  script:
    - cp ./config/docker/settings.xml /root/.m2/settings.xml
    - mvn dependency:resolve -B -U

test:
  stage: test
  image: maven:3.3.9-jdk-8
  tags:
    - docker
  cache:
    key: maven
    paths:
      - ./m2Repository
  dependencies:
    - prepare
  script:
    - cp ./config/docker/settings.xml /root/.m2/settings.xml
    - mvn test -B

build:
  stage: build
  image: maven:3.3.9-jdk-8
  tags:
    - docker
  cache:
    key: maven
    paths:
      - ./m2Repository
  dependencies:
    - test
  script:
    - cp ./config/docker/settings.xml /root/.m2/settings.xml
    - mvn clean install -DskipTests -Dmaven.javadoc.skip=true -B
    - ./config/docker/s3cp ./target/wildbook-6.0.0-EXPERIMENTAL.war s3://wildbook-matt-test/wildbook-6.0.0-EXPERIMENTAL.war

deploy-container:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
  tags:
    - docker
  stage: deploy
  dependencies:
    - build
  services:
    - docker:dind
  before_script:
  - docker info
  script:
    - ./config/docker/s3cp s3://wildbook-matt-test/wildbook-6.0.0-EXPERIMENTAL.war ./target/wildbook-6.0.0-EXPERIMENTAL.war
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker build -t mattmclaugh/wildbook:latest -f config/docker/Dockerfile .
    - docker push mattmclaugh/wildbook:latest
